{"version":3,"sources":["Components/img/surprised_pikachu.jpg","Components/PokemonCard/PokemonCard.jsx","Components/SearchBar/SearchBar.jsx","Components/IsLoading/IsLoading.jsx","Pages/Homepage.jsx","App.js","hooks/useFetchData2.js","Components/Skillbars/Skillbar.jsx","Components/TypeTag/TypeTag.jsx","Pages/PokeDexDesignComponents/ColoredLeds.jsx","Pages/PokeDexDesignComponents/Bars.jsx","Pages/PokeDex.jsx","reportWebVitals.js","index.js"],"names":["PokemonCard","item","style","className","classNamesHelper","types","type","name","id","src","sprites","other","alt","charAt","toUpperCase","slice","SearchBar","onChange","onSubmit","htmlFor","autoComplete","IsLoading","imgSrc","PokemonData","globalState","useContext","AppContext","globalPokemons","pokemonDataPage","setGlobalPokemons","setPokemonDataPage","hasAlreadyLoadedPokemons","Boolean","useState","localPokemons","setLocalPokemons","search","setSearch","filteredPokemons","setFilteredPokemons","url","options","disable","data","setData","isLoading","setIsLoading","hasError","setHasError","isDisabled","fetchData","useCallback","endpoint","a","axios","get","firstApiCall","nextApiCall","next","firstApiCallResult","results","Promise","all","map","res","secondApiCallUrls","secondApiCallResults","useEffect","refetch","useFetchData2","updatedData","filter","toLowerCase","includes","SurprisedPikachu","console","log","event","preventDefault","target","value","index","to","textDecoration","color","animationDelay","padding","marginBottom","onClick","Skillbar","level","width","TypeTag","ColoredLed","w","h","bcolor","border","radius","margin","height","backgroundColor","borderRadius","Bars","withRouter","match","history","pokemon","setPokemon","loading","setLoading","pokemonDescription","setPokemonDescription","barSkills","setBarSkills","pokemonTypes","setPokemonType","params","fetchItem","species","speciesFetch","speciesData","description","flavor_text_entries","flavor_text","itemStats","stats","itemTypes","skills","stat","base_stat","fetchSpecificItem","goBack","front_default","base_experience","parseInt","toFixed","weight","createContext","App","Provider","basename","exact","path","component","Homepage","PokeDex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6ce4fba.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/surprised_pikachu.2226ec24.jpg\";","import PropTypes from 'prop-types';\r\nimport classNamesHelper from 'classnames';\r\nimport './PokemonCard.css';\r\n\r\nexport default function PokemonCard({ item, style }) {\r\n  return (\r\n    <div\r\n      className={classNamesHelper(\r\n        'pokemon-card',\r\n        item.types[0].type.name && `${item.types[0].type.name}`,\r\n      )}\r\n      key={item.id}\r\n      style={style}\r\n    >\r\n      <div className=\"pokemon-id\">#{item.id}</div>\r\n      <div className=\"pokemon-img-wrapper\">\r\n        <img\r\n          className=\"pokemon-img\"\r\n          src={item.sprites.other['official-artwork']['front_default']}\r\n          alt={item.name}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"pokemon-name\">{item.name.charAt(0).toUpperCase() + item.name.slice(1)}</div>\r\n      <div>Type: {item.types[0].type.name}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nPokemonCard.propTypes = {\r\n  item: PropTypes.object,\r\n  style: PropTypes.object,\r\n};\r\n","// import SideBar from '../SideBar';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './searchBar.css';\r\nconst SearchBar = ({ onChange, onSubmit }) => {\r\n  return (\r\n    <form className=\"search-bar-wrapper\" onSubmit={onSubmit} onChange={onChange}>\r\n      <div className=\"logo\">PokeDex</div>\r\n      <div className=\"searchArea\">\r\n        <label htmlFor=\"pokemonSearch\">Search: </label>\r\n        <input type=\"text\" id=\"pokemonSearch\" autoComplete=\"off\" name=\"search\" />\r\n        {/* keep this here if you want to use a button for the form\r\n         */}\r\n        {/* <button type=\"submit\">Search</button> */}\r\n      </div>\r\n      {/* this is an unfinished idea that should have been use in order to make the navigation in the website easier. */}\r\n      {/* <SideBar /> */}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n\r\nSearchBar.propTypes = {\r\n  onChange: PropTypes.func,\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst IsLoading = ({ imgSrc }) => {\r\n  return (\r\n    <div className=\"isLoading-wrapper\">\r\n      <span>Loading...</span>\r\n      <img className=\"surprised-pikachu\" src={imgSrc} alt=\"Very surprised pikachu\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IsLoading;\r\n\r\nIsLoading.propTypes = {\r\n  imgSrc: PropTypes.string,\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { useGlobalState } from '../App';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Homepage.css';\r\nimport SurprisedPikachu from '../Components/img/surprised_pikachu.jpg';\r\nimport PokemonCard from '../Components/PokemonCard/PokemonCard';\r\nimport SearchBar from '../Components/SearchBar/SearchBar';\r\nimport IsLoading from '../Components/IsLoading/IsLoading';\r\nimport useFetchData2 from '../hooks/useFetchData2';\r\n\r\nfunction PokemonData() {\r\n  const globalState = useGlobalState();\r\n  const globalPokemons = globalState.pokemonDataPage;\r\n  const setGlobalPokemons = globalState.setPokemonDataPage;\r\n  const hasAlreadyLoadedPokemons = Boolean(globalPokemons);\r\n  const [localPokemons, setLocalPokemons] = useState(globalPokemons);\r\n  const [search, setSearch] = useState('');\r\n  const [filteredPokemons, setFilteredPokemons] = useState([]);\r\n\r\n  const { isLoading, hasError, data, refetch } = useFetchData2({\r\n    url: 'https://pokeapi.co/api/v2/pokemon/',\r\n    options: { disable: hasAlreadyLoadedPokemons },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data && hasAlreadyLoadedPokemons) {\r\n      const updatedData = {\r\n        next: data.next,\r\n        results: [...localPokemons.results, ...data.results],\r\n      };\r\n      setLocalPokemons(updatedData);\r\n      setGlobalPokemons(updatedData);\r\n    } else if (data) {\r\n      setLocalPokemons(data);\r\n      setGlobalPokemons(data);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    setFilteredPokemons(\r\n      localPokemons?.results.filter((item) => {\r\n        return item.name.toLowerCase().includes(search.toLowerCase());\r\n      }),\r\n    );\r\n  }, [search, localPokemons?.results]);\r\n\r\n  const onChange = (event) => {\r\n    event.preventDefault();\r\n    setSearch(event.target.value);\r\n  };\r\n\r\n  // use this to make the submit button to work. Ps don't forget to make it visible\r\n  // const onSubmit = (event) => {\r\n  //   event.preventDefault();\r\n  //   const formData = new FormData(event.target);\r\n  //   const searchValue = formData.get('search');\r\n  //   setSearch(searchValue);\r\n  // };\r\n\r\n  // This is a another way to filter instead of using the useEffect()\r\n\r\n  // const filteredPokemons = localPokemons?.results.filter((item) => {\r\n  //   return item.name.toLowerCase().includes(search.toLowerCase());\r\n  // });\r\n\r\n  if (isLoading) {\r\n    return <IsLoading imgSrc={SurprisedPikachu} />;\r\n  }\r\n  if (hasError) {\r\n    console.log(hasError);\r\n  }\r\n  return (\r\n    <>\r\n      <SearchBar onChange={onChange} />\r\n      <div className=\"pokemonList\">\r\n        {filteredPokemons?.map((item, index) => {\r\n          return (\r\n            <Link\r\n              to={`${item.id}`}\r\n              key={item.id}\r\n              style={{ textDecoration: 'none', color: 'inherit' }}\r\n            >\r\n              <PokemonCard item={item} style={{ animationDelay: `${index * 0.001}s` }} />\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n      <button\r\n        style={{ padding: `10px`, marginBottom: `10px` }}\r\n        onClick={() => refetch(localPokemons.next)}\r\n      >\r\n        Load More\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PokemonData;\r\n","import './App.css';\r\n// import Homepage from './Pages/Homepage';\r\n// import Pokedex from './Pages/Pokedex';\r\n// import { useState } from 'react';\r\nimport { createContext, useContext, useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport Homepage from './Pages/Homepage';\r\nimport PokeDex from './Pages/PokeDex';\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport function useGlobalState() {\r\n  const globalState = useContext(AppContext);\r\n\r\n  return globalState;\r\n}\r\n\r\nfunction App() {\r\n  const [pokemonDataPage, setPokemonDataPage] = useState(null);\r\n\r\n  const globalState = {\r\n    pokemonDataPage,\r\n    setPokemonDataPage,\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AppContext.Provider value={globalState}>\r\n        <Router basename=\"/Pokedex\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Homepage} />\r\n            <Route exact path=\"/:id\" component={PokeDex} />\r\n          </Switch>\r\n        </Router>\r\n      </AppContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import axios from \"axios\"\r\nimport { useCallback, useEffect, useState } from \"react\"\r\n\r\nexport default function useFetchData({ url, options = { disable: false } }) {\r\n  const [data, setData] = useState(null);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [hasError, setHasError] = useState(null);\r\n  const isDisabled = options.disable;\r\n\r\n  // const [count, setCount] = useState(null);\r\n  // const [previous, setPrevious] = useState(null);\r\n\r\n\r\n  const fetchData = useCallback(async function fetchData(endpoint) {\r\n    try {\r\n      const firstApiCall = await axios.get(endpoint)\r\n      // console.log(firstApiCall);\r\n      const nextApiCall = firstApiCall.data.next;\r\n      // console.log(nextApiCall);\r\n      const firstApiCallResult = firstApiCall.data.results;\r\n      // console.log(firstApiCallResult);\r\n      const secondApiCallUrls = await Promise.all(\r\n        firstApiCallResult.map((res) => axios.get(res.url))\r\n      )\r\n      const secondApiCallResults = secondApiCallUrls.map((item) => item.data)\r\n      // console.log(secondApiCallResults);\r\n      setData({\r\n        next: nextApiCall,\r\n        results: secondApiCallResults,\r\n      })\r\n      setIsLoading(false)\r\n    } catch (error) {\r\n      setIsLoading(false)\r\n      setHasError(error)\r\n    }\r\n\r\n  }, []);\r\n  // console.log(data);\r\n  useEffect(() => {\r\n    if (!isDisabled) {\r\n      fetchData(url)\r\n    } else {\r\n      setIsLoading(false)\r\n    }\r\n  }, [fetchData, isDisabled, url])\r\n\r\n  return {\r\n    data: data,\r\n    isLoading: isLoading,\r\n    hasError: hasError,\r\n    refetch: fetchData,\r\n  }\r\n\r\n}\r\n","import './skillbar.css';\r\n\r\nconst Skillbar = ({ name, level }) => {\r\n  return (\r\n    <div className=\"skill-bar-wrapper\">\r\n      <div className=\"skill-bar-name\">{name}</div>\r\n      <div className=\"skill-bar-body\">\r\n        <div className=\"skill-bar-body-fil\" style={{ width: level }}></div>\r\n        <div className=\"skill-bar-body-stat\">\r\n          <span>{level}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Skillbar;\r\n","import classNamesHelper from 'classnames';\r\nimport './TypeTags.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TypeTag = ({ type }) => {\r\n  return <span className={classNamesHelper('type', type && `${type}`)}>{type}</span>;\r\n};\r\n\r\nexport default TypeTag;\r\n\r\nTypeTag.propTypes = {\r\n  type: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst ColoredLed = ({ w, h, bcolor, border, radius, margin }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: w,\r\n        height: h,\r\n        backgroundColor: bcolor,\r\n        border: border,\r\n        borderRadius: radius,\r\n        margin: margin,\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default ColoredLed;\r\n\r\nColoredLed.propTypes = {\r\n  w: PropTypes.string,\r\n  h: PropTypes.string,\r\n  bcolor: PropTypes.string,\r\n  border: PropTypes.string,\r\n  radius: PropTypes.string,\r\n  margin: PropTypes.string,\r\n};\r\n","const Bars = () => {\r\n  return (\r\n    <div className=\"bars-wrapper\">\r\n      <div className=\"bar\"></div>\r\n      <div className=\"bar\"></div>\r\n      <div className=\"bar\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bars;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './PokeDex.css';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Skillbar from '../Components/Skillbars/Skillbar';\r\nimport axios from 'axios';\r\n\r\nimport TypeTag from '../Components/TypeTag/TypeTag';\r\nimport SurprisedPikachu from '../Components/img/surprised_pikachu.jpg';\r\nimport ColoredLed from './PokeDexDesignComponents/ColoredLeds';\r\nimport Bars from './PokeDexDesignComponents/Bars';\r\nimport IsLoading from '../Components/IsLoading/IsLoading';\r\n\r\nconst PokeScreen = ({ match, history }) => {\r\n  const [pokemon, setPokemon] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [pokemonDescription, setPokemonDescription] = useState('');\r\n  const [barSkills, setBarSkills] = useState('');\r\n  const [pokemonTypes, setPokemonType] = useState([]);\r\n  useEffect(() => {\r\n    const fetchSpecificItem = async () => {\r\n      const fetchItem = await axios.get(`https://pokeapi.co/api/v2/pokemon/${match.params.id}`);\r\n      const item = await fetchItem.data;\r\n      console.log(item);\r\n      const speciesFetch = await axios.get(item.species.url);\r\n      const speciesData = speciesFetch.data;\r\n      const description = speciesData.flavor_text_entries[9].flavor_text;\r\n\r\n      const itemStats = item.stats;\r\n      const itemTypes = item.types.map((item) => {\r\n        return item.type.name;\r\n      });\r\n      console.log(itemTypes);\r\n      const skills = itemStats.map((item) => {\r\n        return { type: item.stat.name, level: item.base_stat };\r\n      });\r\n      setPokemonType(itemTypes);\r\n      setPokemonDescription(description);\r\n      setPokemon(item);\r\n      setBarSkills(skills);\r\n      setLoading(false);\r\n    };\r\n    fetchSpecificItem();\r\n  }, [match.params.id]);\r\n\r\n  if (loading) {\r\n    return <IsLoading imgSrc={SurprisedPikachu} />;\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"poke-screen__wrapper\">\r\n        <button onClick={() => history.goBack()} className=\"to-home-page\">\r\n          To Home Page\r\n        </button>\r\n        <section className=\"screen-wrapper\">\r\n          <div className=\"screen-leds\">\r\n            <ColoredLed\r\n              w=\"11px\"\r\n              h=\"11px\"\r\n              bcolor=\"#FA0707\"\r\n              border=\"\"\r\n              radius=\"50%\"\r\n              margin=\"0px 10px \"\r\n            />\r\n            <ColoredLed\r\n              w=\"11px\"\r\n              h=\"11px\"\r\n              bcolor=\"#FA0707\"\r\n              border=\"\"\r\n              radius=\"50%\"\r\n              margin=\"0px 10px \"\r\n            />\r\n          </div>\r\n          <div className=\"beeboop-leds\">\r\n            <ColoredLed\r\n              w=\"80px\"\r\n              h=\"80px\"\r\n              bcolor=\"#1198D1\"\r\n              border=\"2px solid #fff\"\r\n              radius=\"50%\"\r\n              margin=\"\"\r\n            />\r\n            <ColoredLed\r\n              w=\"21px\"\r\n              h=\"21px\"\r\n              bcolor=\"#FA0707\"\r\n              border=\"\"\r\n              radius=\"50%\"\r\n              margin=\"-10px 6px 0px\"\r\n            />\r\n            <ColoredLed\r\n              w=\"21px\"\r\n              h=\"21px\"\r\n              bcolor=\"#D8DC13\"\r\n              border=\"\"\r\n              radius=\"50%\"\r\n              margin=\"-10px 6px 0px\"\r\n            />\r\n            <ColoredLed\r\n              w=\"21px\"\r\n              h=\"21px\"\r\n              bcolor=\"#25FA02\"\r\n              border=\"\"\r\n              radius=\"50%\"\r\n              margin=\"-10px 6px 0px\"\r\n            />\r\n          </div>\r\n          <div className=\"screen\">\r\n            <img src={pokemon.sprites.other['official-artwork'].front_default} alt=\"\" />\r\n          </div>\r\n          <div className=\"vents-wrapper\">\r\n            <Bars />\r\n            <Bars />\r\n          </div>\r\n        </section>\r\n        <section className=\"stats-wrapper\">\r\n          <h1 className=\"pokeScreen-name\">\r\n            {pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)}\r\n          </h1>\r\n          <div className=\"type-tags\">\r\n            {pokemonTypes.map((item) => {\r\n              return <TypeTag type={item} key={item} />;\r\n            })}\r\n          </div>\r\n          <h3 className=\"pokemonScreen-description\">{pokemonDescription}</h3>\r\n          <h3 className=\"pokeScreen-exp\">Base Experience: {pokemon.base_experience}</h3>\r\n          <h3 className=\"pokeScreen-height\">\r\n            {'Height ' + (parseInt(pokemon.height) / 10).toFixed(1) + 'm'}\r\n          </h3>\r\n          <h3 className=\"pokeScreen-weight\">Weight: {parseInt(pokemon.weight) / 10} kg </h3>\r\n          <div className=\"skill-bars\">\r\n            {barSkills.map((item, index) => {\r\n              return <Skillbar key={index} name={item.type} level={item.level} />;\r\n            })}\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(PokeScreen);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}